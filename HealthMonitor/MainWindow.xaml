<Window
    x:Class="HealthMonitor.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:HealthMonitor"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
    xmlns:ucs="clr-namespace:HealthMonitor.UserControls"
    xmlns:wpf="clr-namespace:CefSharp.Wpf;assembly=CefSharp.Wpf"
    Title="健康监测"
    Width="1280"
    Height="720"
    AllowsTransparency="True"
    Background="Transparent"
    WindowStartupLocation="CenterScreen"
    WindowStyle="None"
    mc:Ignorable="d">
    <Window.Resources>
        <Style x:Key="RHTitle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="10,0" />
            <Setter Property="Foreground" Value="#ffffff" />
        </Style>
        <Style TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="FontSize" Value="16" />
        </Style>
        <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Height" Value="30" />
            <Setter Property="FontSize" Value="14" />
        </Style>
        <Style x:Key="TabItemExWithUnderLineStyle" TargetType="{x:Type TabItem}">
            <Setter Property="Foreground" Value="#eac100" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="#FFACACAC" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid
                            x:Name="templateRoot"
                            Background="Transparent"
                            SnapsToDevicePixels="True">
                            <Border
                                x:Name="_underline"
                                Margin="{TemplateBinding Margin}"
                                BorderBrush="#17b978"
                                BorderThickness="0" />
                            <Grid>
                                <TextBlock
                                    x:Name="txt"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="{TemplateBinding Foreground}"
                                    Text="{TemplateBinding Header}"
                                    TextTrimming="CharacterEllipsis"
                                    ToolTip="{TemplateBinding Header}"
                                    Visibility="Visible" />
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top" />
                                </MultiDataTrigger.Conditions>

                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Setter TargetName="txt" Property="Foreground" Value="#EEC900" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Left" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Opacity" Value="0.56" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Bottom" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Opacity" Value="0.56" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Right" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Opacity" Value="0.56" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Opacity" Value="0.56" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Setter Property="Panel.ZIndex" Value="1" />
                                <Setter TargetName="txt" Property="Foreground" Value="#eec900" />
                                <Setter TargetName="_underline" Property="BorderThickness" Value="0,0,0,2" />
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridRowStyle1" TargetType="{x:Type DataGridRow}">
            <Setter Property="Background" Value="White" />
            <Setter Property="Foreground" Value="#5d5d5a" />
            <Setter Property="Margin" Value="0,4,0,0" />
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
            <Setter Property="ValidationErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <TextBlock
                            Margin="2,0,0,0"
                            VerticalAlignment="Center"
                            Foreground="Red"
                            Text="!" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRow}">
                        <Border
                            x:Name="DGR_Border"
                            Padding="0,8"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            CornerRadius="5"
                            SnapsToDevicePixels="True">
                            <SelectiveScrollingGrid>
                                <SelectiveScrollingGrid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </SelectiveScrollingGrid.ColumnDefinitions>
                                <SelectiveScrollingGrid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </SelectiveScrollingGrid.RowDefinitions>
                                <DataGridCellsPresenter
                                    Grid.Column="1"
                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <DataGridDetailsPresenter
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                    Visibility="{TemplateBinding DetailsVisibility}" />
                                <DataGridRowHeader
                                    Grid.RowSpan="2"
                                    SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                    Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                            </SelectiveScrollingGrid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#f0f0f0" />
                    <Setter Property="Foreground" Value="#5d5d5a" />
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#f0f0f0" />
                    <Setter Property="Foreground" Value="#5d5d5a" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True" />
                        <Condition Property="Selector.IsSelectionActive" Value="False" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="#f0f0f0" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Width" Value="8" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Cursor" Value="SizeWE" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridColumnHeaderStyle1" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#69717d" />
            <Setter Property="Margin" Value="15,0,15,10" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid>
                            <theme:DataGridHeaderBorder
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                IsClickable="{TemplateBinding CanUserSort}"
                                IsHovered="{TemplateBinding IsMouseOver}"
                                IsPressed="{TemplateBinding IsPressed}"
                                SeparatorBrush="{TemplateBinding SeparatorBrush}"
                                SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
                                SortDirection="{TemplateBinding SortDirection}">
                                <ContentPresenter
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </theme:DataGridHeaderBorder>
                            <Thumb
                                x:Name="PART_LeftHeaderGripper"
                                HorizontalAlignment="Left"
                                Style="{StaticResource ColumnHeaderGripperStyle}" />
                            <Thumb
                                x:Name="PART_RightHeaderGripper"
                                HorizontalAlignment="Right"
                                Style="{StaticResource ColumnHeaderGripperStyle}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="{x:Static DataGrid.FocusBorderBrushKey}" Color="#FF000000" />
        <Style x:Key="DataGridCellStyle1" TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#5d5d5a" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Margin" Value="15,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle
                                x:Name="Border"
                                Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                                SnapsToDevicePixels="True" />
                            <Polygon
                                x:Name="Arrow"
                                Margin="8,8,3,3"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                Fill="Black"
                                Opacity="0.15"
                                Points="0,10 10,10 10,0"
                                Stretch="Uniform" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Stroke" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Border" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#222528" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="ScrollViewer.PanningMode" Value="Both" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="AutoGenerateColumns" Value="False" />
            <Setter Property="HeadersVisibility" Value="Column" />
            <Setter Property="Margin" Value="0,10,0,0" />
            <Setter Property="SelectionMode" Value="Single" />
            <Setter Property="SelectionUnit" Value="FullRow" />
            <Setter Property="CanUserResizeRows" Value="False" />
            <Setter Property="CanUserReorderColumns" Value="False" />
            <Setter Property="CanUserAddRows" Value="False" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="ColumnWidth" Value="*" />
            <Setter Property="GridLinesVisibility" Value="None" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <Button
                                                Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                Command="{x:Static DataGrid.SelectAllCommand}"
                                                Focusable="false"
                                                Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle,
                                                                                              TypeInTargetAssembly={x:Type DataGrid}}}"
                                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                            <DataGridColumnHeadersPresenter
                                                x:Name="PART_ColumnHeadersPresenter"
                                                Grid.Column="1"
                                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                            <ScrollContentPresenter
                                                x:Name="PART_ScrollContentPresenter"
                                                Grid.Row="1"
                                                Grid.ColumnSpan="2"
                                                CanContentScroll="{TemplateBinding CanContentScroll}" />
                                            <ScrollBar
                                                x:Name="PART_VerticalScrollBar"
                                                Grid.Row="1"
                                                Grid.Column="2"
                                                Maximum="{TemplateBinding ScrollableHeight}"
                                                Orientation="Vertical"
                                                ViewportSize="{TemplateBinding ViewportHeight}"
                                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <Grid Grid.Row="2" Grid.Column="1">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar
                                                    x:Name="PART_HorizontalScrollBar"
                                                    Grid.Column="1"
                                                    Maximum="{TemplateBinding ScrollableWidth}"
                                                    Orientation="Horizontal"
                                                    ViewportSize="{TemplateBinding ViewportWidth}"
                                                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                    Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true" />
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070" />
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121" />
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF" />
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF" />
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070" />
        <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}" />
            <Setter Property="BorderBrush" Value="#dae2ea" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid
                            x:Name="templateRoot"
                            Background="Transparent"
                            SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border
                                x:Name="checkBoxBorder"
                                Margin="1"
                                Padding="1"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3">
                                <Grid x:Name="markGrid">
                                    <Path
                                        x:Name="optionMark"
                                        Margin="1"
                                        Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                        Fill="{StaticResource OptionMark.Static.Glyph}"
                                        Opacity="0"
                                        Stretch="None" />
                                    <Rectangle
                                        x:Name="indeterminateMark"
                                        Margin="2"
                                        Fill="{StaticResource OptionMark.Static.Glyph}"
                                        Opacity="0" />
                                </Grid>
                            </Border>
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Setter Property="Padding" Value="4,-1,0,0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.MouseOver.Background}" />
                                <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="#9575cd" />
                                <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                                <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.Disabled.Background}" />
                                <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.Disabled.Border}" />
                                <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.Disabled.Glyph}" />
                                <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.Disabled.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.Pressed.Background}" />
                                <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="#9575cd" />
                                <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.Pressed.Glyph}" />
                                <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.Pressed.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                                <Setter TargetName="indeterminateMark" Property="Opacity" Value="0" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="optionMark" Property="Opacity" Value="0" />
                                <Setter TargetName="indeterminateMark" Property="Opacity" Value="1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Border
        x:Name="windowBorder"
        Background="#f7f6f4"
        BorderBrush="#17b978"
        BorderThickness="1"
        CornerRadius="5">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="50" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <Grid Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="149*" />
                    <ColumnDefinition Width="649*" />
                </Grid.ColumnDefinitions>
                <Border
                    Grid.ColumnSpan="2"
                    Background="#17b978"
                    BorderBrush="Transparent"
                    BorderThickness="0.1"
                    CornerRadius="3,3,0,0"
                    MouseDown="Border_MouseDown"
                    MouseLeftButtonDown="Border_LeftButtonDown" />
                <DockPanel Grid.ColumnSpan="2">
                    <Image
                        Width="30"
                        Height="30"
                        Margin="5,0,0,0"
                        HorizontalAlignment="Left"
                        Source="/Resource/sub-logo-1.png" />
                    <TextBlock Style="{StaticResource RHTitle}">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0}（{1}）">
                                <Binding Path="ApplicationName" />
                                <Binding Path="ApplicationVersion" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                    <StackPanel
                        HorizontalAlignment="Right"
                        DockPanel.Dock="Right"
                        Orientation="Horizontal">
                        <Button
                            x:Name="btnMin"
                            Background="#17b978"
                            BorderThickness="0"
                            Content="—"
                            Style="{StaticResource MaterialDesignFlatMidBgButton}" />
                        <Button
                            x:Name="btnMax"
                            Background="#17b978"
                            BorderThickness="0"
                            Content="☐"
                            Style="{StaticResource MaterialDesignFlatMidBgButton}" />
                        <Button
                            x:Name="btnClose"
                            Background="#17b978"
                            BorderThickness="0"
                            Content="✕"
                            Style="{StaticResource MaterialDesignFlatMidBgButton}" />
                    </StackPanel>
                </DockPanel>
            </Grid>
            <TabControl
                x:Name="tab"
                Grid.Row="1"
                Padding="5"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="0"
                Foreground="Black">
                <TabItem
                    Width="100"
                    Height="40"
                    Margin="5,0"
                    FontSize="15"
                    Header="报警监测"
                    Style="{StaticResource TabItemExWithUnderLineStyle}">
                    <Grid>
                        <wpf:ChromiumWebBrowser
                            x:Name="Browser"
                            Height="{Binding ElementName=windowBorder, Path=ActualHeight}"
                            Address="{Binding AlarmSettingAddress}" />
                    </Grid>
                </TabItem>
                <TabItem
                    Width="100"
                    Height="40"
                    Margin="5,0"
                    FontSize="15"
                    Header="进程监测"
                    Style="{StaticResource TabItemExWithUnderLineStyle}">
                    <DataGrid
                        x:Name="memberDataGrid"
                        Grid.Row="5"
                        CellStyle="{DynamicResource DataGridCellStyle1}"
                        ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle1}"
                        ItemsSource="{Binding ProcessHealthItems}"
                        RowStyle="{DynamicResource DataGridRowStyle1}"
                        Style="{DynamicResource DataGridStyle1}">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn
                                Width="50"
                                CanUserResize="False"
                                Header="">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding IsCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource CheckBoxStyle1}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTextColumn
                                Width="auto"
                                Binding="{Binding Number}"
                                CanUserResize="False"
                                Header="#"
                                IsReadOnly="True" />
                            <DataGridTextColumn
                                Width="*"
                                Binding="{Binding ProcessIdentity}"
                                Header="名称"
                                IsReadOnly="True" />
                            <DataGridTextColumn
                                Width="*"
                                Binding="{Binding ProcessName}"
                                Header="标识"
                                IsReadOnly="True" />
                            <DataGridTemplateColumn
                                Width="*"
                                Header="健康状态"
                                IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Border
                                                Width="50"
                                                Height="25"
                                                CornerRadius="2">
                                                <Border.Style>
                                                    <Style TargetType="Border">
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsCheck}" Value="false" />
                                                                    <Condition Binding="{Binding Status}" Value="false" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" Value="#CCCCCC" />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsCheck}" Value="true" />
                                                                    <Condition Binding="{Binding Status}" Value="false" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" Value="#ffd615" />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsCheck}" Value="true" />
                                                                    <Condition Binding="{Binding Status}" Value="true" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" Value="#17b978" />
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                                <TextBlock
                                                    Margin="0,0,0,1"
                                                    Padding="8"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Foreground="White">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Style.Triggers>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding IsCheck}" Value="false" />
                                                                        <Condition Binding="{Binding Status}" Value="false" />
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter Property="Text" Value="未知" />
                                                                </MultiDataTrigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding IsCheck}" Value="true" />
                                                                        <Condition Binding="{Binding Status}" Value="false" />
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter Property="Text" Value="异常" />
                                                                </MultiDataTrigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding IsCheck}" Value="true" />
                                                                        <Condition Binding="{Binding Status}" Value="true" />
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter Property="Text" Value="正常" />
                                                                </MultiDataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Border>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </TabItem>
                <TabItem
                    Width="120"
                    Height="40"
                    Margin="5,0"
                    FontSize="15"
                    Header="数据库监测"
                    Style="{StaticResource TabItemExWithUnderLineStyle}">
                    <DataGrid
                        Grid.Row="5"
                        CellStyle="{DynamicResource DataGridCellStyle1}"
                        ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle1}"
                        ItemsSource="{Binding DbHealthItems}"
                        RowStyle="{DynamicResource DataGridRowStyle1}"
                        Style="{DynamicResource DataGridStyle1}">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn
                                Width="50"
                                CanUserResize="False"
                                Header="">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding IsCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource CheckBoxStyle1}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn
                                Width="auto"
                                Binding="{Binding Number}"
                                CanUserResize="False"
                                Header="#"
                                IsReadOnly="True" />
                            <DataGridTextColumn
                                Width="*"
                                Binding="{Binding DbName}"
                                Header="数据库"
                                IsReadOnly="True" />
                            <DataGridTextColumn
                                Width="*"
                                Binding="{Binding DbType}"
                                Header="类型"
                                IsReadOnly="True" />
                            <DataGridTemplateColumn
                                Width="*"
                                Header="健康状态"
                                IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Border
                                                Width="50"
                                                Height="25"
                                                CornerRadius="2">
                                                <Border.Style>
                                                    <Style TargetType="Border">
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsCheck}" Value="false" />
                                                                    <Condition Binding="{Binding Status}" Value="false" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" Value="#CCCCCC" />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsCheck}" Value="true" />
                                                                    <Condition Binding="{Binding Status}" Value="false" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" Value="#ffd615" />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsCheck}" Value="true" />
                                                                    <Condition Binding="{Binding Status}" Value="true" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" Value="#17b978" />
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                                <TextBlock
                                                    Margin="0,0,0,1"
                                                    Padding="8"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Foreground="White">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Style.Triggers>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding IsCheck}" Value="false" />
                                                                        <Condition Binding="{Binding Status}" Value="false" />
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter Property="Text" Value="未知" />
                                                                </MultiDataTrigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding IsCheck}" Value="true" />
                                                                        <Condition Binding="{Binding Status}" Value="false" />
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter Property="Text" Value="异常" />
                                                                </MultiDataTrigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding IsCheck}" Value="true" />
                                                                        <Condition Binding="{Binding Status}" Value="true" />
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter Property="Text" Value="正常" />
                                                                </MultiDataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Border>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </TabItem>
                <TabItem
                    Width="100"
                    Height="40"
                    Margin="5,0"
                    FontSize="15"
                    Header="FTP监测"
                    Style="{StaticResource TabItemExWithUnderLineStyle}">
                    <DataGrid
                        Grid.Row="5"
                        CellStyle="{DynamicResource DataGridCellStyle1}"
                        ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle1}"
                        ItemsSource="{Binding FTPItems}"
                        RowStyle="{DynamicResource DataGridRowStyle1}"
                        Style="{DynamicResource DataGridStyle1}">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn
                                Width="50"
                                CanUserResize="False"
                                Header="">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding IsCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource CheckBoxStyle1}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn
                                Width="auto"
                                Binding="{Binding Number}"
                                CanUserResize="False"
                                Header="#"
                                IsReadOnly="True" />
                            <DataGridTextColumn
                                Width="*"
                                Binding="{Binding FTPName}"
                                Header="名称"
                                IsReadOnly="True" />
                            <DataGridTextColumn
                                Width="*"
                                Binding="{Binding FTPServerHost}"
                                Header="主机"
                                IsReadOnly="True" />
                            <DataGridTextColumn
                                Width="*"
                                Binding="{Binding FTPServerPort}"
                                Header="端口"
                                IsReadOnly="True" />
                            <DataGridTextColumn
                                Width="*"
                                Binding="{Binding FTPUser}"
                                Header="账户"
                                IsReadOnly="True" />
                            <DataGridTemplateColumn
                                Width="*"
                                Header="健康状态"
                                IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Border
                                                Width="50"
                                                Height="25"
                                                CornerRadius="2">
                                                <Border.Style>
                                                    <Style TargetType="Border">
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsCheck}" Value="false" />
                                                                    <Condition Binding="{Binding Status}" Value="false" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" Value="#CCCCCC" />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsCheck}" Value="true" />
                                                                    <Condition Binding="{Binding Status}" Value="false" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" Value="#ffd615" />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsCheck}" Value="true" />
                                                                    <Condition Binding="{Binding Status}" Value="true" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" Value="#17b978" />
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                                <TextBlock
                                                    Margin="0,0,0,1"
                                                    Padding="8"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Foreground="White">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Style.Triggers>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding IsCheck}" Value="false" />
                                                                        <Condition Binding="{Binding Status}" Value="false" />
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter Property="Text" Value="未知" />
                                                                </MultiDataTrigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding IsCheck}" Value="true" />
                                                                        <Condition Binding="{Binding Status}" Value="false" />
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter Property="Text" Value="异常" />
                                                                </MultiDataTrigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding IsCheck}" Value="true" />
                                                                        <Condition Binding="{Binding Status}" Value="true" />
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter Property="Text" Value="正常" />
                                                                </MultiDataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Border>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </TabItem>
            </TabControl>
        </Grid>
    </Border>
</Window>
